# Add serverless.yml to current folder
# change variables in custom to your specific details

service: aws-nodejs # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs8.10

  region: ap-southeast-2

  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - 
      Effect: "Allow"
      Action:
        - "dynamodb:*"
        - "appsync:GraphQL"
        - "iot:*"
      Resource: "*"

custom:
  APPSYNC_API_KEY: APPSYNC_API_KEY_HERE
  APPSYNC_HOST: xxxxx.appsync-api.{REGION}.amazonaws.com
  APPSYNC_REGION: REGION_HERE

functions:
  recorder:
    handler: recorder/handler.main
    events:
      - iot:
          sql: "SELECT * FROM 'rmit'"
    environment:
      EVENT_TABLE_NAME:
        Ref: EventListDynamoDbTable
  publisher:
    handler: publisher/handler.main
    events:
      - iot:
          sql: "SELECT * FROM 'rmit'"
    environment:
      APPSYNC_API_KEY: ${self:custom.APPSYNC_API_KEY}
      APPSYNC_HOST: ${self:custom.APPSYNC_HOST}
      APPSYNC_REGION: ${self:custom.APPSYNC_REGION}
  get-latest:
    handler: get-latest/handler.main
    events:
      - http:
          path: /latest
          method: get
          cors: true
    environment:
      EVENT_TABLE_NAME:
        Ref: EventListDynamoDbTable

# you can add CloudFormation resource templates here
resources:
 Resources:
    ScalingRole: 
      Type: "AWS::IAM::Role"
      Properties: 
        AssumeRolePolicyDocument: 
          Version: "2012-10-17"
          Statement: 
          - 
            Effect: Allow
            Principal: 
              Service: 
                - 
                  "application-autoscaling.amazonaws.com"
            Action: 
            - 
              "sts:AssumeRole"
        Path: "/"
        Policies: 
          - 
            PolicyName: root
            PolicyDocument: 
              Version: "2012-10-17"
              Statement: 
              - 
                Effect: Allow
                Action:          
                - "dynamodb:DescribeTable"
                - "dynamodb:UpdateTable"
                - "cloudwatch:PutMetricAlarm"
                - "cloudwatch:DescribeAlarms"
                - "cloudwatch:GetMetricStatistics"
                - "cloudwatch:SetAlarmState"
                - "cloudwatch:DeleteAlarms"
                Resource: "*"
    EventListDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        AttributeDefinitions:
          -
            AttributeName: groupingKey
            AttributeType: S
          -
            AttributeName: timestamp
            AttributeType: N
        KeySchema:
          -
            AttributeName: groupingKey
            KeyType: HASH
          -
            AttributeName: timestamp
            KeyType: RANGE
    EventListTableWriteCapacityScalableTarget: 
      Type: "AWS::ApplicationAutoScaling::ScalableTarget"
      Properties: 
        MaxCapacity: 100
        MinCapacity: 5
        ResourceId:
          Fn::Join:
            - "/"
            - - table
              -
                Ref: EventListDynamoDbTable
        RoleARN: 
          Fn::GetAtt: ScalingRole.Arn
        ScalableDimension: "dynamodb:table:WriteCapacityUnits"
        ServiceNamespace: dynamodb
    EventListTableWriteScalingPolicy: 
      Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
      Properties: 
        PolicyName: WriteAutoScalingPolicy
        PolicyType: TargetTrackingScaling
        ScalingTargetId: 
          Ref: EventListTableWriteCapacityScalableTarget
        TargetTrackingScalingPolicyConfiguration: 
          TargetValue: 70
          ScaleInCooldown: 60
          ScaleOutCooldown: 60
          PredefinedMetricSpecification: 
            PredefinedMetricType: DynamoDBWriteCapacityUtilization
    EventListTableReadCapacityScalableTarget: 
      Type: "AWS::ApplicationAutoScaling::ScalableTarget"
      Properties: 
        MaxCapacity: 100
        MinCapacity: 5
        ResourceId:
          Fn::Join:
            - "/"
            - - table
              -
                Ref: EventListDynamoDbTable
        RoleARN: 
          Fn::GetAtt: ScalingRole.Arn
        ScalableDimension: "dynamodb:table:ReadCapacityUnits"
        ServiceNamespace: dynamodb
    EventListTableReadScalingPolicy: 
      Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
      Properties: 
        PolicyName: ReadAutoScalingPolicy
        PolicyType: TargetTrackingScaling
        ScalingTargetId: 
          Ref: EventListTableReadCapacityScalableTarget
        TargetTrackingScalingPolicyConfiguration: 
          TargetValue: 70
          ScaleInCooldown: 60
          ScaleOutCooldown: 60
          PredefinedMetricSpecification: 
            PredefinedMetricType: DynamoDBReadCapacityUtilization